{"version":3,"sources":["components/Navbar/Navbar.js","api/api.js","redux/photoReducer.js","components/Photos/Photos.js","components/Modal/ModalWin.js","components/Loader/Loader.js","components/Photos/PhotosContainer.js","components/About/About.js","components/Products/Products.js","components/Calendar/GetMonthData.js","components/Calendar/Calendar.js","components/Calendar/CalendarContainer.js","components/Footer/Footer.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["NavbarMenu","bg","expand","Brand","exact","to","className","URL","api","axios","get","id","initialState","photos","comments","urlModal","setModal","val","type","photoReducer","state","action","url","text","Photos","props","src","onClick","showModal","alt","connect","useState","textareaValue","setTextareaValue","show","onHide","Header","closeButton","Body","map","com","onChange","event","target","value","placeholder","textComments","addComment","Loader","onAPIPhotos","dispatch","a","response","data","onModalPhoto","length","el","key","About","Products","DAYS_IN_MONTH","areEqual","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","getDay","getDayOfWeek","day","i","j","undefined","Calendar","monthSelect","React","createRef","yearSelect","handleSelectChange","current","onSelectChange","selectedDate","toLocaleDateString","handlePrevMonthButtonClick","ref","months","years","handleNextMonthButtonClick","weekDayNames","monthData","week","handleDayClick","classnames","baseDate","CalendarContainer","setDate","setSelectedDate","setMonthData","prevDate","selectDate","nextDate","Footer","class","href","App","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","store","createStore","applyMiddleware","reduxThunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2e083a57.chunk.js","sourcesContent":["import React from 'react';\nimport './Navbar.scss';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { NavLink } from 'react-router-dom';\n\nconst NavbarMenu = () => {\n  return (\n    <Navbar bg=\"dark\" expand=\"lg\">\n      <Navbar.Brand>\n        <NavLink exact to='/'> ТЗ по React</NavLink>\n      </Navbar.Brand>\n      <div className=\"nav-links\">\n        <NavLink to=\"/about\">About ТЗ</NavLink>\n        <NavLink to=\"/products\">Используемые технологии</NavLink>\n      </div>\n    </Navbar>\n  )\n}\nexport default NavbarMenu\n","import axios from 'axios';\n\nconst URL = \"https://boiling-refuge-66454.herokuapp.com/images/\";\n\nexport const api = {\n  getAPIPhotos () {\n    return axios.get(URL)\n  },\n  getAPIModal (id) {\n    return axios.get(URL + id)\n  }\n}","import { api } from '../api/api';\n\nconst SET_PHOTOS = 'SET_PHOTOS'\nconst SET_MODAL = 'SET_MODAL'\nconst ADD_COMMENT = 'ADD_COMMENT'\n\nlet initialState = {\n  photos: null,\n  comments: [],\n  urlModal: null\n}\n\nconst photoReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_PHOTOS:\n      return {\n        ...state,\n        photos: action.val\n      }\n      case SET_MODAL:\n        return {\n          ...state,\n          comments: action.val.comments,\n          urlModal: action.val.url\n        }\n        case ADD_COMMENT:\n        return {\n          ...state,\n          comments: action.text,\n        }\n    default: return state\n  }\n}\n\nexport const setPhotos = (val) => ({type: SET_PHOTOS, val})\nexport const setModal = (val) => ({type: SET_MODAL, val})\nexport const addComment = (text) => ({type: ADD_COMMENT, text})\n\nexport const onAPIPhotos = () => async (dispatch) => {\n  let response = await api.getAPIPhotos()\n  dispatch(setPhotos(response.data))\n}\n\nexport const onModalPhoto = (id) => async (dispatch) => {\n  let response = await api.getAPIModal(id)\n  let comments = []\n  if (response.data.comments.length > 0) {\n    comments = [response.data.comments[0].text]\n  }\n  dispatch(setModal({\n    comments,\n    url: response.data.url\n  }))\n}\n\nexport default photoReducer","import React from 'react';\nimport './Photos.scss';\n\nconst Photos = props => {\n  return <img src={props.url} onClick={() => props.showModal(props.id)} alt={props.id}/>\n}\n\nexport default Photos","import React, { useState } from 'react';\nimport './Modal.scss';\nimport Modal from 'react-bootstrap/Modal';\nimport { setModal } from '../../redux/photoReducer';\nimport { connect } from 'react-redux';\n\nconst ModalWin = props => {\n\n  const handleClose = () => {\n    props.setModal({\n      comments: [],\n      url: null\n    })\n  }\n\n  const [textareaValue, setTextareaValue] = useState('')\n  \n  const saveComment = () => {\n    const textComments = [...props.comments, textareaValue]\n    props.addComment(textComments)\n    setTextareaValue('')\n  }\n\n  return (\n    <Modal show={props.urlModal} onHide={handleClose}>\n      <Modal.Header closeButton></Modal.Header>\n      <Modal.Body>\n        <img src={props.urlModal} alt=\"\" className=\"img-fluid\" />\n        <div className=\"card\">\n          <div className=\"card-header\">\n            Комментарии:\n          </div>\n          <div className=\"card-body\">\n            {\n              props.comments.map(com => {\n                return<div className=\"comment\">{com}</div>\n              })\n            }\n          </div>\n          <textarea \n            className=\"card-footer\" \n            onChange={event => setTextareaValue(event.target.value)}\n            value={textareaValue}\n            placeholder=\"Текст комментария...\"\n            ></textarea>\n          <button className=\"btn btn-success\" onClick={saveComment}>Добавить</button>\n      </div>\n      </Modal.Body>\n    </Modal>\n  )\n}\nlet mapStateToProps = state => {\n  return {\n    urlModal: state.photoReducer.urlModal\n  }\n}\nexport default connect(mapStateToProps, { setModal })(ModalWin)","import React from 'react'\nimport './Loader.scss'\n\nconst Loader = props => {\n  return (\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  )\n}\n\nexport default Loader","import React from 'react';\nimport { onAPIPhotos, onModalPhoto, addComment } from '../../redux/photoReducer';\nimport { connect } from 'react-redux';\nimport Photos from './Photos';\nimport ModalWin from '../Modal/ModalWin';\nimport Loader from '../Loader/Loader';\n\nconst PhotosContainer = props => {\n  \n  if (props.photos === null) props.onAPIPhotos()\n\n  const showModal = (id) => {\n    props.onModalPhoto(id)\n  }\n\n  return (\n    <div className=\"container\">\n      { props.photos === null &&\n        <Loader/>\n      }\n      <div className=\"photos__row\">\n        { props.photos != null &&\n            props.photos.map(el => {\n              return <Photos\n                key={el.id}\n                url={el.url}\n                id={el.id}\n                showModal={showModal}\n              />\n            })\n        }\n        <ModalWin\n          urlModal={props.urlModal}\n          comments={props.comments}\n          addComment={props.addComment}\n        />\n      </div>\n    </div>\n  )\n}\nlet mapStateToProps = state => {\n  return {\n    photos: state.photoReducer.photos,\n    comments: state.photoReducer.comments,\n  }\n}\nexport default connect(mapStateToProps, { onAPIPhotos, onModalPhoto, addComment })(PhotosContainer)\n","import React from 'react';\nimport './About.scss';\n\nconst About = () => {\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"about\">\n        <div className=\"card about-card\">\n          <div className=\"card-header\">\n            Техническое задание.\n          </div>\n          <div className=\"card-body\">\n            <p>\n              Необходимо получить список фотографий с бекенд части по адресу:\n              \"https://boiling-refuge-66454.herokuapp.com/images/\".\n            </p>\n            <p>\n              Отобразить фотографии на странице.\n            </p>\n            <p>\n              При клике на фото - открывается модальное окно с подробностями по данной фотографии.\n            </p>\n            <p>\n              Информация для модального окна по адресу:\n              \"https://boiling-refuge-66454.herokuapp.com/images/id\".\n              Разрешить возможность добавлять комментарии к фото в модальном окне.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default About","import React from 'react';\nimport './Products.scss';\n\nconst Products = () => {\n  return (\n    <div className=\"container mt-5\">\n      <div className=\"technologies\">\n        <div className=\"card products-card\">\n          <div className=\"card-header\">\n            Используемые продукты:\n          </div>\n          <div className=\"card-body\">\n            <p>ReactJS, React-Redux, React-Router-Dom</p>\n            <p>Redux, Redux-thunk</p>\n            <p>Node-Sass</p>\n            <p>Bootstrap, React-Bootstrap</p>\n            <p>Axios</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\nexport default Products","const DAYS_IN_WEEK = 7\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nexport function areEqual(a, b) {\n\n  if (!a || !b) return false;\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  )\n}\n\nexport function isLeapYear(year) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nexport function getDaysInMonth(date) {\n  const month = date.getMonth()\n  const year = date.getFullYear()\n\n  if (isLeapYear(year) && month === 1) {\n    return DAYS_IN_MONTH[month] + 1\n  } else {\n    return DAYS_IN_MONTH[month]\n  }\n}\n\nexport function getDayOfWeek(date) {\n  if (date.getDay() === 0) return 6\n  return date.getDay() - 1\n}\n\nexport function getMonthData(year, month) {\n  const result = []\n  const date = new Date(year, month)\n  const daysInMonth = getDaysInMonth(date)\n  const monthStartsOn = getDayOfWeek(date)\n  let day = 1\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    result[i] = []\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n        result[i][j] = undefined\n      } else {\n        result[i][j] = new Date(year, month, day++)\n      }\n    }\n  }\n  return result\n}","import React from 'react';\nimport './Calendar.scss';\nimport { areEqual } from './GetMonthData';\nimport classnames from 'classnames';\n\nconst Calendar = props => {\n\n  const monthSelect = React.createRef();\n  const yearSelect = React.createRef();\n\n  const handleSelectChange = () => {\n    const year = yearSelect.current.value\n    const month = monthSelect.current.value\n    props.onSelectChange(year, month)\n  }\n  \n  return (\n    <div className=\"container\">\n      {\n        props.selectedDate && \n        <p className=\"selected-data-show\">Выбранная дата: {props.selectedDate.toLocaleDateString()}</p>\n      }\n      <div className='header'>\n        <button className='btn-stap' onClick={props.handlePrevMonthButtonClick}>{'<'}</button>\n        <select \n          className=\"select-calendar\" \n          ref={monthSelect} \n          onChange={handleSelectChange}\n          value={props.date.getMonth()}\n        >\n          {\n            props.months.map((month, i) => {\n             return <option key={month} value={i}>{month}</option>\n            })\n          }\n        </select>\n        <select\n          className=\"select-calendar\" \n          ref={yearSelect} \n          onChange={handleSelectChange}\n          value={props.date.getFullYear()}\n        >\n          {\n            props.years.map(year => {\n              return <option key={year} value={year}>{year}</option>\n            })\n          }\n        </select>\n        <button className='btn-stap' onClick={props.handleNextMonthButtonClick}>{'>'}</button>\n      </div>\n\n      <table className=\"table\">\n        <thead>\n          <tr>\n            {\n              props.weekDayNames.map(day => {\n                return <th key={day}>{day}</th>\n              })\n            }\n          </tr>\n        </thead>\n        <tbody>\n          { \n            props.monthData.map((week, i) => {\n              return <tr key={i}>\n                { \n                  week.map((date, i) => date ? \n                  <td \n                    key={i} \n                    onClick={() => props.handleDayClick(date)} \n                    className = {classnames('td-date', {\n                      'today': areEqual(date, props.baseDate),\n                      'selected': areEqual(date, props.selectedDate) \n                    })}\n                  >\n                    {date.getDate()}\n                  </td>\n                    :\n                      <td key={i} />\n                  )}\n              </tr>\n            }) \n          }\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default Calendar","import React, { useState } from 'react';\nimport './Calendar.scss';\nimport { getMonthData } from './GetMonthData';\nimport Calendar from './Calendar';\n\nconst CalendarContainer = () => {\n\n  const baseDate = new Date()\n\n  const months = [\n    'Январь', 'Февраля', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\n  ]\n  const years = [\n    2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020\n  ]\n  const weekDayNames = [\n    'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'\n  ]\n\n  const [date, setDate] = useState(baseDate)\n  const [selectedDate, setSelectedDate] = useState(null)\n  const [monthData, setMonthData] = useState(getMonthData(date.getFullYear(), date.getMonth()))\n\n  const handlePrevMonthButtonClick = () => {\n    const prevDate = new Date(date.getFullYear(), date.getMonth() - 1)\n    setDate(prevDate)\n    setMonthData(getMonthData(prevDate.getFullYear(), prevDate.getMonth()))\n  }\n  \n  const handleNextMonthButtonClick = () => {\n    const nextDate = new Date(date.getFullYear(), date.getMonth() + 1)\n    setDate(nextDate)\n    setMonthData(getMonthData(nextDate.getFullYear(), nextDate.getMonth()))\n  }\n\n  const onSelectChange = (year, month) => {\n    const selectDate = new Date(year, month)\n    setDate(selectDate)\n    setMonthData(getMonthData(selectDate.getFullYear(), selectDate.getMonth()))\n  }\n\n  const handleDayClick = date => {\n    setSelectedDate(date)\n  }\n\n  return (\n    <Calendar\n      baseDate ={baseDate}\n      selectedDate = {selectedDate}\n      handlePrevMonthButtonClick= {handlePrevMonthButtonClick}\n      onSelectChange = {onSelectChange}\n      date = {date} \n      months = {months}\n      years = {years}\n      handleNextMonthButtonClick = {handleNextMonthButtonClick}\n      weekDayNames = {weekDayNames}\n      monthData = {monthData}\n      handleDayClick = {handleDayClick}\n    />\n  )\n}\n\nexport default CalendarContainer","import React from 'react';\nimport './Footer.scss';\nimport Calendar from '../Calendar/CalendarContainer';\n\nconst Footer = () => {\n  return (\n    <div className=\"app-footer\">\n      <div className=\"footer-content\">\n        <div class=\"col-md-6 mb-4\">\n          <Calendar />\n        </div>\n        <div class=\"col-md-6 mb-4 col-color\">\n          <div className=\"card-header\">\n            Используемые продукты:\n          </div>\n          <div className=\"card-body\">\n            <p>ReactJS, React-Router-Dom</p>\n            <p>Node-Sass</p>\n            <p>Classnames</p>\n            <p>Bootstrap, React-Bootstrap</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-copyright text-center py-3\">© 2020 Copyright:\n        <a href=\"https://github.com/102nix\"> 102nix</a>\n      </div>\n    </div>\n\n  )\n}\n\nexport default Footer","import React from 'react';\nimport './App.scss';\nimport NavbarMenu from './components/Navbar/Navbar';\nimport PhotosContainer from './components/Photos/PhotosContainer';\nimport About from './components/About/About';\nimport Products from './components/Products/Products';\nimport Footer from './components/Footer/Footer';\nimport { Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <NavbarMenu />\n      <div className=\"content\">\n        <Route exact path=\"/\" render={() => <PhotosContainer /> } />\n        <Route exact path=\"/about\" render={() => <About /> } />\n        <Route exact path=\"/products\" render={() => <Products /> } />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport photoReducer from './photoReducer';\n\nlet reducers = combineReducers({\n  photoReducer\n})\n\nconst store = createStore(reducers, applyMiddleware(reduxThunk))\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}