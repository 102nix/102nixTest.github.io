{"version":3,"sources":["api/api.js","redux/allToReducer.js","components/Navbar/Navbar.js","components/Loader/Loader.js","components/RegulationTO/RegulationTO.js","components/RegulationTO/ContainerRegulationTO.js","FormControls/Input.js","Validators/validate.js","components/AddTo/formAddTo.js","components/AddTo/addTO.js","components/ModalEdit/FormModal.js","components/ModalEdit/ModalEdit.js","components/MadeTO/MadeTo.js","components/MadeTO/ContainerMadeTO.js","components/Home/Home.js","components/Footer/Footer.js","components/Calendar/GetMonthData.js","components/Calendar/Calendar.js","components/Calendar/CalendarContainer.js","components/Recharts/Recharts.js","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["listAPI","src_list","axios","get","dataCarTO","id","Date","now","put","console","log","initialState","TOList","currentPage","start","end","showModal","editData","dataRecharts","setCurrentPage","val","type","reFresh","setModal","rechartsAC","data","onGetListTO","dispatch","a","response","responseList","Object","values","list","allToReducer","state","action","title","text","price","connect","resetState","props","useState","getHours","getMinutes","time","setTime","setInterval","className","to","exact","onClick","getDate","getMonth","getFullYear","Loader","RegulationTO","split","map","e","undefined","pages","pageCount","Math","ceil","length","i","push","doPaginate","dataPaginat","slice","key","titleTo","textTo","FieldOfForm","input","meta","hasError","touched","error","name","required","compose","withRouter","reduxForm","form","handleSubmit","onSubmit","Field","placeholder","component","validate","history","onSetListTO","dataForm","useEffect","initialize","priceTo","htmlFor","onUpdateListTO","document","addEventListener","escFunction","keyCode","Modal","show","onHide","url","MadeTo","editTO","editDataModal","URL_LIST","Home","Carousel","Item","src","alt","Footer","DAYS_IN_MONTH","areEqual","b","getMonthData","year","month","result","date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","getDay","getDayOfWeek","day","j","Calendar","monthSelect","React","createRef","yearSelect","handleSelectChange","current","value","onSelectChange","selectedDate","toLocaleDateString","handlePrevMonthButtonClick","ref","onChange","months","years","handleNextMonthButtonClick","weekDayNames","monthData","week","handleDayClick","classnames","baseDate","CalendarContainer","setDate","setSelectedDate","setMonthData","prevDate","nextDate","selectDate","onDataCharting","listTO","dataPrice","pricePr","priceWrk","priceProduct","priceWork","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","stroke","App","path","render","Boolean","window","location","hostname","match","reducers","combineReducers","formReducer","storage","createStore","applyMiddleware","thunkMidleware","ReactDOM","StrictMode","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.904fc7ce.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const listAPI = {\n\n  getlistTO (src_list) {\n    return axios.get(src_list)\n  },\n  setListMadeTO (dataCarTO) {\n    dataCarTO.id = Date.now()\n    return axios.put(`https://made-car-to.firebaseio.com/${dataCarTO.id}.json`, dataCarTO)\n  },\n  updateListMadeTO (dataCarTO) {\n    console.log(dataCarTO)\n    return axios.put(`https://made-car-to.firebaseio.com/${dataCarTO.id}.json`, dataCarTO)\n  }\n}","import { listAPI } from '../api/api';\n\nconst READ_LIST = 'READ_LIST';\nconst UPDATE_CURRENT_PAGE = 'UPDATE_CURRENT_PAGE'\nconst FRESH_PAGINATION = 'FRESH_PAGINATION'\nconst MODAL_FALSE_TRUE = 'MODAL_FALSE_TRUE'\nconst EDIT_DATA = 'EDIT_DATA'\nconst RESET_STATE = 'RESET_STATE'\nconst URL_FOR_UPDATE = 'https://made-car-to.firebaseio.com/.json'\nconst UPDATE_RECHARTS = 'UPDATE_RECHARTS'\n\nlet initialState = {\n  TOList: null,\n  currentPage: 1,\n  start: 0,\n  end: 4,\n  showModal: false,\n  editData: null,\n  dataRecharts: null\n}\n\nconst allToReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case READ_LIST:\n      return {\n        ...state,\n        TOList: action.list\n      }\n    case UPDATE_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.val.currentPage,\n        start: action.val.start,\n        end: action.val.end\n      }\n    case FRESH_PAGINATION:\n      return {\n        ...state,\n        currentPage: 1,\n        start: 0,\n        end: 4\n      }\n    case MODAL_FALSE_TRUE:\n      return {\n        ...state,\n        showModal: action.val\n      }\n    case EDIT_DATA:\n      return {\n        ...state,\n        editData: {title: action.val.title, text: action.val.text, price: action.val.price, id: action.val.id},\n        showModal: true\n      }\n    case RESET_STATE:\n      return {\n        ...state,\n        TOList: null,\n        currentPage: 1,\n        start: 0,\n        end: 4,\n        showModal: false,\n        editData: null\n      }\n      case UPDATE_RECHARTS:\n        return {\n          ...state,\n          dataRecharts: action.data\n        }\n    default: return state\n  }\n}\n\nexport const getTOListAC = (list) => ({type: READ_LIST, list})\nexport const setCurrentPage = (val) => ({type: UPDATE_CURRENT_PAGE, val})\nexport const reFresh = () => ({type: FRESH_PAGINATION})\nexport const setModal = (val) => ({type: MODAL_FALSE_TRUE, val})\nexport const editDataModal = (val) => ({type: EDIT_DATA, val})\nexport const resetState = () => ({type: RESET_STATE})\nexport const rechartsAC = (data) => ({type: UPDATE_RECHARTS, data})\n\nexport const onGetListTO = (src_list) => async (dispatch) => {\n  const response = await listAPI.getlistTO(src_list)\n  const responseList = Object.values(response.data)\n  dispatch(getTOListAC(responseList))\n}\n\nexport const onSetListTO = (dataForm) => async (dispatch) => {\n  await listAPI.setListMadeTO(dataForm)\n  dispatch(onGetListTO(URL_FOR_UPDATE))\n}\n\nexport const onUpdateListTO = (dataForm) => async (dispatch) => {\n  await listAPI.updateListMadeTO(dataForm)\n  dispatch(onGetListTO(URL_FOR_UPDATE))\n}\nexport const onDataCharting = (listTO) => (dispatch) => {\n  const dataPrice = []\n  for (let data of listTO) {\n    const pricePr = data.priceTo.split(': ')\n    const priceWrk = data.textTo.split(': ')\n    const title = data.titleTo.split(';')\n    if (pricePr[1] === undefined) pricePr[1] = 0\n    if (priceWrk[1] === undefined) priceWrk[1] = 0\n\n    dataPrice.push(\n      {\n        title: title[0].split(' ')[0],\n        priceProduct: pricePr[1], \n        priceWork: priceWrk[1]\n      }\n    )\n  }\n  dispatch(rechartsAC(dataPrice))\n}\nexport default allToReducer","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { resetState } from '../../redux/allToReducer';\nimport './Navbar.scss';\n\n\nconst Navbar = props => {\n\n  let now = new Date()\n  let [time, setTime] = useState(\n    `${now.getHours() < 10 ? '0' + now.getHours() : now.getHours()}\n      :\n    ${now.getMinutes() < 10 ? '0' + now.getMinutes() : now.getMinutes()}`  \n  )\n\n  setInterval(() => {\n    let now = new Date()\n    setTime(\n      `${now.getHours() < 10 ? '0' + now.getHours() : now.getHours()}\n      :\n      ${now.getMinutes() < 10 ? '0' + now.getMinutes() : now.getMinutes()}` \n    )\n  },60000)\n\n  return (\n    <div className=\"container\">\n      <div className=\"row text-center navbar\">\n        <div className=\"col-12 col-lg-2\">\n          <div className=\"navbar__logo\">\n            <NavLink to=\"/\">Nissan Qashkai</NavLink> \n          </div>\n        </div>\n        <div className=\"col-12 col-lg-8\">\n          <div className=\"menu-links\">\n            <NavLink exact to=\"/\">Главная</NavLink>\n            <NavLink to=\"/regulation-to\" onClick={() => props.resetState()}>ТО по регламенту</NavLink>\n            <NavLink to=\"/made-to\"  onClick={() => props.resetState()}>Сделанные ТО</NavLink>\n            <NavLink to=\"/add-to\">Добавить ТО</NavLink>\n          </div>\n        </div>\n        <div className=\"col-12 col-lg-2\">\n          <NavLink to=\"/calendar\" className=\"link-time\">\n            <div className=\"navbar__time\">\n                <span>\n                  { now.getDate() < 10 ? '0' + now.getDate() : now.getDate() }\n                    -\n                  { (now.getMonth() + 1) < 10 ? '0' + (now.getMonth() + 1) : (now.getMonth() + 1) }\n                    -\n                  { now.getFullYear() }\n                </span>\n              \n              <strong> {time}</strong>\n            </div>\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default connect(null, { resetState })(Navbar)","import React from 'react'\nimport './Loader.scss'\n\nconst Loader = props => {\n  return (\n    <div className=\"lds-roller\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  )\n}\n\nexport default Loader","import React from 'react';\nimport './RegulationTO.scss';\n\nconst RegulationTO = props => {\n  return (\n    <>\n      <div className=\"row list-to\">\n        <div className=\"col-sm-6\">\n          <div className=\"title-all\">\n            {props.title}\n          </div>\n        </div>\n        <div className=\"col-sm-6\">\n          <div className=\"text-all\">\n            {\n              props.text.split('. ')\n                .map(e => {\n                  return<p>{e}</p>\n                })\n            }\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default RegulationTO","import React from 'react';\nimport './ContainerRegulationTO.scss';\nimport { connect } from 'react-redux';\nimport { onGetListTO, setCurrentPage, reFresh } from '../../redux/allToReducer';\nimport Loader from '../Loader/Loader';\nimport AllTo from './RegulationTO';\n\nconst ContainerRegulationTO = props => {\n\n  const URL_LIST = 'https://car-to.firebaseio.com/.json'\n\n  if (props.TOList === null) props.onGetListTO(URL_LIST)\n  if (props.currentPage === undefined || props.start === undefined || props.end === undefined) props.reFresh()\n\n  /////Pagination/////\n\n  let pages = []\n\n  if (props.TOList !== null) {\n    const pageSize = 3\n    const pageCount = Math.ceil(props.TOList.length / pageSize)\n    for (let i = 1; i < pageCount; i++) {\n      pages.push(i)\n    }\n  }\n\n  const doPaginate = (val) => {\n    const dataPaginat = {\n      currentPage: (props.currentPage + val[0]), // props.currentPage -/+ 1\n      start: (props.start + val[1]),\n      end: (props.end + val[1])\n    }\n    props.setCurrentPage(dataPaginat)\n  }\n\n  /////Pagination/////\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          {\n            props.currentPage !== 1 &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([-1, -2])}>&#171;</small>\n          }\n          {\n            props.currentPage <= pages.length &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([+1, +2])}>&#187;</small>\n          }\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-2 offset-md-5\">\n          {\n            props.TOList === null &&\n            <div className=\"loader\"><Loader /></div>\n          }\n        </div>\n      </div>\n\n      {\n        props.TOList !== null && props.TOList.length !== 0\n          ?\n          <>  \n            <div className=\"row text-center\">\n              <h2 className=\"h-all-to\">ТО по регламенту:</h2>\n            </div>\n              {\n                props.TOList\n                  .slice(props.start, props.end)\n                  .map(list => {\n                    return <AllTo\n                      key={list.id}\n                      title={list.titleTo}\n                      text={list.textTo}\n                    />\n                  })\n              }\n          </>\n          : <div className=\"list-empty\">\n            <p>Список пуст</p>\n          </div>\n      }\n    </div>\n  )\n}\n\nlet mapStateToProps = state => {\n  return {\n    TOList: state.allToReducer.TOList,\n    currentPage: state.allToReducer.currentPage,\n    start: state.allToReducer.start,\n    end: state.allToReducer.end\n  }\n}\n\nexport default connect(mapStateToProps, { onGetListTO, setCurrentPage, reFresh })(ContainerRegulationTO)","import React from 'react';\nimport './FieldOfForm.scss';\n\nexport const FieldOfForm = ({input, meta, ...props}) => {\n  const hasError = meta.touched && meta.error\n  return (\n    <> \n      {\n        input.name === 'titleTo'\n        ? <input {...input} {...props} />\n        : <textarea {...input} {...props} />\n      }\n      \n      { \n        hasError &&\n        <small>{meta.error}</small>\n      }\n    </>\n  )\n}\n\n","export const required = val => {\n  if (val) return undefined\n  return 'Поле не должно быть пустым!'\n}\n\n","import React from 'react';\nimport './formAddTo.scss';\nimport { Field, reduxForm } from 'redux-form';\nimport { FieldOfForm } from '../../FormControls/Input';\nimport { required } from '../../Validators/validate';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nlet FormMadeTO = ({handleSubmit, ...props}) => {\n  return (\n    <div className=\"add-content\">\n      <h3 className=\"text-center\">Добавить ТО:</h3>\n      <form onSubmit={handleSubmit}>\n        <div className=\"from-group\">\n          <Field\n            placeholder=\"Пробег и дата.\" \n            name=\"titleTo\" \n            component={FieldOfForm} \n            validate={[required]} \n            className=\"form-control\" \n          />\n        </div>\n        <div className=\"from-group\">\n          <Field \n            placeholder=\"Регламентные работы и стоимость.\" \n            name=\"textTo\" \n            component={FieldOfForm} \n            validate={[required]} \n            className=\"form-control\"\n            id=\"text\" \n          />\n        </div>\n        <div className=\"from-group\">\n          <Field \n            placeholder=\"Стоимость комплектующих.\" \n            name=\"priceTo\" \n            component={FieldOfForm} \n            validate={[required]} \n            className=\"form-control\"\n            id=\"price\"\n          />\n        </div>\n        <div className=\"add-action\">\n          <button className=\"btn btn-success\">Сохранить</button>\n          <button className=\"btn btn-danger\" onClick={() => {props.history.push('/')}}>Отмена</button>\n        </div>\n      </form>\n    </div>\n  )\n  \n}\n\nexport default compose(\n  withRouter,\n  reduxForm({form: 'MadeTO'})\n)(FormMadeTO)","import React from 'react';\nimport FormMadeTO from './formAddTo';\nimport { connect } from 'react-redux';\nimport { onSetListTO } from '../../redux/allToReducer';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\nconst CreateMadeTO = props => {\n  \n  const onSubmit = dataForm => {\n    props.onSetListTO(dataForm)\n    props.history.push('/made-to')\n  }\n  \n  return (\n    <div className=\"container\">\n      {/* <div className=\"form-made-to__row\"> */}\n        <FormMadeTO onSubmit={onSubmit} />\n      {/* </div> */}\n    </div>\n  )\n}\n\nexport default compose (\n  withRouter,\n  connect(null, { onSetListTO })\n)(CreateMadeTO)","import React, { useEffect } from 'react';\nimport './formModal.scss';\nimport { Field, reduxForm } from 'redux-form';\nimport { FieldOfForm } from '../../FormControls/Input';\nimport { required } from '../../Validators/validate';\nimport { setModal } from '../../redux/allToReducer';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\n\nlet FormModal = ({handleSubmit, ...props}) => {\n  \n  useEffect(() => {\n    props.initialize({\n      titleTo: props.title,\n      textTo: props.text,\n      priceTo: props.price\n    })\n  }, [])\n\n  return (\n    <form onSubmit={handleSubmit} >\n      <div className=\"from-group\">\n        <label htmlFor=\"title\">Пробег и дата:</label>\n        <Field \n          id=\"title\" \n          name=\"titleTo\" \n          component={FieldOfForm} \n          validate={[required]} \n          className=\"form-control\" \n        />\n      </div>\n      <div className=\"from-group\">\n        <label htmlFor=\"text\">Регламентные работы и стоимость:</label>\n        <Field \n          id=\"text\" \n          name=\"textTo\" \n          component={FieldOfForm} \n          validate={[required]} \n          className=\"form-control\" \n        />\n      </div>\n      <div className=\"from-group\">\n        <label htmlFor=\"price\">Стоимость комплектующих:</label>\n        <Field \n          id=\"price\" \n          name=\"priceTo\" \n          component={FieldOfForm} \n          validate={[required]} \n          className=\"form-control\" />\n      </div>\n      <div className=\"modal-action\">\n        <button className=\"btn btn-success\">Сохранить</button>\n        <button className=\"btn btn-danger\" onClick={() => props.setModal(false)}>Отменить</button>\n      </div>\n    </form>\n  )\n  \n}\n\nexport default compose(\n  reduxForm({form: 'modal-form'}),\n  connect(null, { setModal })\n)(FormModal)\n","import React, { useEffect } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { connect } from 'react-redux';\nimport { setModal, onUpdateListTO } from '../../redux/allToReducer';\nimport FormModal from './FormModal';\n\nconst ModalEdit = props => {\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", escFunction, false);\n  },[])\n\n  const escFunction = (e) => {\n    if (e.keyCode === 27) props.setModal(false)\n  }\n\n  const handleClose = () => {\n    props.setModal(false)\n  }\n\n  const onSubmit = dataForm => {\n    dataForm.id = props.id\n    dataForm.url = props.url\n    props.onUpdateListTO(dataForm)\n    props.setModal(false)\n  }\n\n  return(\n    <>\n      <Modal show={props.showModal} onHide={handleClose}>\n        <FormModal onSubmit={onSubmit} title={props.title} text={props.text} price={props.price} />\n      </Modal>\n    </>\n  )\n}\n\nlet mapStateToProps = state => {\n  return {\n    showModal: state.allToReducer.showModal\n  }\n}\n\nexport default connect(mapStateToProps, { setModal, onUpdateListTO })(ModalEdit)","import React from 'react';\nimport './MadeTo.scss';\n\nexport const MadeTo = props => {\n  return (\n    <div className=\"row\" className=\"row list-made-to\" onClick={() => props.editTO(props)}>\n      <div className=\"col-sm-2\">\n        <div className=\"title-made\">\n          {\n            props.title.split(';')\n              .map((e, i) => {\n                if (i === 0) return <p key={i} className=\"odometr\">{e}</p>\n                return <p key={i} className=\"data\">{e}</p>\n              })\n          }\n        </div>\n      </div>\n      <div className=\"col-sm-5\">\n        <div className=\"text-made\">\n          {\n            props.text.split(';')\n              .map(e => {\n                return<p key={e}>{e}</p>\n              })\n          }\n        </div>\n      </div>\n      <div className=\"col-sm-5\">\n        <div className=\"price-made\">\n          { \n            props.price !== undefined \n              ? props.price.split(';')\n                  .map(e => {\n                    return<p key={e}>{e}</p>\n                  })\n              : null\n          }\n        </div>\n        </div>\n    </div>\n  )\n}\n\nexport default MadeTo","import React from 'react';\nimport { onGetListTO, setCurrentPage, reFresh, editDataModal, rechartsAC } from '../../redux/allToReducer';\nimport ModalEdit from '../ModalEdit/ModalEdit';\nimport MadeTo from './MadeTo';\nimport Loader from '../Loader/Loader';\nimport { connect } from 'react-redux';\nimport './CntainerMadeTo.scss';\nimport { NavLink } from 'react-router-dom';\n\nconst ContainerMadeTO = props => {\n\n  const URL_LIST = 'https://made-car-to.firebaseio.com/.json'\n\n  if (props.TOList === null) props.onGetListTO(URL_LIST)\n  if ( props.currentPage === undefined || props.start === undefined || props.end === undefined ) props.reFresh()\n\n  /////Pagination/////\n  let pages = []\n\n  if (props.TOList !== null) {\n    const pageSize = 4\n    const pageCount = Math.ceil(props.TOList.length / pageSize)\n\n    for (let i = 1; i <= pageCount; i++) {\n      pages.push(i)\n    }\n  }\n\n  const doPaginate = (val) => {\n    const dataPaginat = {\n      currentPage: (props.currentPage + val[0]),\n      start: (props.start + val[1]),\n      end: (props.end + val[1])\n    }\n    props.setCurrentPage(dataPaginat)\n  }\n\n /////Pagination/////\n\n const editTO = (val) => {\n  props.editDataModal(val)\n}\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          { \n            props.currentPage !== 1 &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([-1, -3])}>&#171;</small>\n          }\n          {\n            props.currentPage <= pages.length &&\n            <small className=\"goto-back-forward\" onClick={() => doPaginate([1, 3])}>&#187;</small>\n          }\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-2 offset-md-5\">\n          { \n          props.TOList === null &&\n          <div className=\"loader\"><Loader /></div>\n          }\n        </div>\n      </div>\n\n      { \n        props.TOList !== null && props.TOList.length !== 0 \n          ? <>\n              {\n                props.editData !== null &&\n                <ModalEdit\n                  title={props.editData.title}\n                  text={props.editData.text}\n                  price={props.editData.price}\n                  id={props.editData.id}\n                  url={URL_LIST}\n                />\n\n              }\n              <div className=\"row text-center\">\n                <h2 className=\"h-made-to\">Сделанные ТО:</h2>\n              </div>\n                {\n                  props.TOList\n                    .slice(props.start, props.end)                 \n                    .map(list => {\n                      return <MadeTo \n                        editTO={editTO}\n                        key={list.id}\n                        id={list.id}\n                        title={list.titleTo}\n                        text={list.textTo}\n                        price={list.priceTo}\n                        />\n                    })\n                }\n                <div className=\"row text-center\">\n                  <NavLink to=\"/recharts\" className=\"link-to-recharts\">График расходов</NavLink>\n                </div>\n           </>\n          : <div className=\"container\">\n              <div className=\"list-empty\">\n                <p>Список пуст</p>\n              </div>\n            </div>\n      }\n    </div>\n  )\n}\nlet mapStateToProps = state => {\n  return {\n    TOList: state.allToReducer.TOList,\n    currentPage: state.allToReducer.currentPage,\n    start: state.allToReducer.start,\n    end: state.allToReducer.end,\n    editData: state.allToReducer.editData\n  }\n}\nexport default connect(mapStateToProps, { onGetListTO, setCurrentPage, reFresh, editDataModal, rechartsAC })(ContainerMadeTO)","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport './Home.scss';\n\n\nconst Home = () => {\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-sm\">\n          <Carousel>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://avtoportal.ru/uploads/posts/2017-07/1501488191_0caa1c573b704f708263d6b162eec19b.jpg\"\n                alt=\"First slide\"\n              />\n              {/* <Carousel.Caption>\n                <h3>First slide label</h3>\n                <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n              </Carousel.Caption> */}\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://static2.sakh.com/i/md/auto/sales/12/83/1283135/n1283135_20190314082622_88ed3d0a.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://auto-database.com/image/pictures-of-nissan-qashqai2-2013-122809.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://s.auto.drom.ru/i24240/s/photos/36580/36579472/gen1200_469384372.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n            <Carousel.Item>\n              <img\n                className=\"d-block w-100\"\n                src=\"https://s.auto.drom.ru/i24240/s/photos/36580/36579472/gen1200_469384372.jpg\"\n                alt=\"Third slide\"\n              />\n            </Carousel.Item>\n          </Carousel>\n        </div>\n      </div>\n      <div className=\"row block-info\">\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Общие\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип кузова\n                  </div>\n                <div className=\"text\">\n                  Внедорожник\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Кол-во дверей\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Кол-во мест\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Класс автомобиля J(кроссовер)\n                  </div>\n                <div className=\"text\">\n                  5\n                  </div>\n              </div>\n              <div className=\"name-key\"></div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Двигатель внутреннего сгорания\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем двигателя в куб.см\n                  </div>\n                <div className=\"text\">\n                  1600\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расположение двигателя\n                  </div>\n                <div className=\"text\">\n                  Спереди, поперечно\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расположение цилиндров\n                  </div>\n                <div className=\"text\">\n                  L4\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Клапанов на цилиндр\n                  </div>\n                <div className=\"text\">\n                  4\n                  </div>\n              </div>\n              <div className=\"name-key\"></div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Трансмиссия\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип привода\n                  </div>\n                <div className=\"text\">\n                  передний\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Тип КПП\n                  </div>\n                <div className=\"text\">\n                  механика 5 ст.\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Подвеска\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Передняя\n                  </div>\n                <div className=\"text\">\n                  независимая\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Задняя\n                  </div>\n                <div className=\"text\">\n                  независимая\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-6\">\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Тормазная система\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Передние тормаза\n                  </div>\n                <div className=\"text\">\n                  дисковые\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Задние тормаза\n                  </div>\n                <div className=\"text\">\n                  дисковые\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Эксплуатационные показатели\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Разгон до 100 км/ч, с\n                  </div>\n                <div className=\"text\">\n                  12\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Максимальная скорость, км/ч\n                  </div>\n                <div className=\"text\">\n                  175\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (городской цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  8,4\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (загородный цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  5,7\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (смешанный цикл)(механика)\n                  </div>\n                <div className=\"text\">\n                  6,7\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (городской цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (загородный цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Расход, л на 100 км (смешанный цикл)(автомат)\n                  </div>\n                <div className=\"text\">\n                  0,0\n                  </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"info-common\">\n            <h2 className=\"title-info\">\n              Размеры\n              </h2>\n            <div className=\"info-common-text\">\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Длина, мм\n                  </div>\n                <div className=\"text\">\n                  4310\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Ширина, мм\n                  </div>\n                <div className=\"text\">\n                  1780\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Высота, мм\n                  </div>\n                <div className=\"text\">\n                  1610\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колесная база, мм\n                  </div>\n                <div className=\"text\">\n                  2630\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колея колес спереди, мм\n                  </div>\n                <div className=\"text\">\n                  1540\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Колея колес сзади, мм\n                  </div>\n                <div className=\"text\">\n                  1550\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Размер шин\n                  </div>\n                <div className=\"text\">\n                  215/65 R16\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Снаряженная масса, кг\n                  </div>\n                <div className=\"text\">\n                  1297\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем багажника, л\n                  </div>\n                <div className=\"text\">\n                  352/1513\n                  </div>\n              </div>\n              <div className=\"row_info\">\n                <div className=\"name-key\">\n                  Объем топливного бака, л\n                  </div>\n                <div className=\"text\">\n                  65\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = () => {\n  return (\n    <div className=\"container text-center\">\n      <div className=\"row\">\n        <div className=\"col-sm-12\">\n          Nissan Qashqai 1.6 (J10)\n        </div>\n        <div className=\"col-sm-12\">\n          В 2010 год проведен рестайлинг кроссовера.\n        </div>\n        <div className=\"col-sm-12\">\n          Модел выпускалась до 2013 года.\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer","const DAYS_IN_WEEK = 7\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\nexport function areEqual(a, b) {\n\n  if (!a || !b) return false;\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  )\n}\n\nexport function isLeapYear(year) {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0);\n}\n\nexport function getDaysInMonth(date) {\n  const month = date.getMonth()\n  const year = date.getFullYear()\n\n  if (isLeapYear(year) && month === 1) {\n    return DAYS_IN_MONTH[month] + 1\n  } else {\n    return DAYS_IN_MONTH[month]\n  }\n}\n\nexport function getDayOfWeek(date) {\n  if (date.getDay() === 0) return 6\n  return date.getDay() - 1\n}\n\nexport function getMonthData(year, month) {\n  const result = []\n  const date = new Date(year, month)\n  const daysInMonth = getDaysInMonth(date)\n  const monthStartsOn = getDayOfWeek(date)\n  let day = 1\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    result[i] = []\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n        result[i][j] = undefined\n      } else {\n        result[i][j] = new Date(year, month, day++)\n      }\n    }\n  }\n  return result\n}","import React from 'react';\nimport './Calendar.scss';\nimport { areEqual } from './GetMonthData';\nimport classnames from 'classnames';\n\nconst Calendar = props => {\n\n  const monthSelect = React.createRef();\n  const yearSelect = React.createRef();\n\n  const handleSelectChange = () => {\n    const year = yearSelect.current.value\n    const month = monthSelect.current.value\n    props.onSelectChange(year, month)\n  }\n  \n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-12 col-sm\">\n          {\n            props.selectedDate && \n            <p className=\"selected-data-show\">Выбранная дата: {props.selectedDate.toLocaleDateString()}</p>\n          }\n        </div>\n      </div>\n      <div className=\"header-calendar\">\n        <div className=\"row text-center\">\n          <div className=\"col-12 offset-0 col-sm-2 offset-sm-0\">\n            <button className='btn btn-light' onClick={props.handlePrevMonthButtonClick}>{'<'}</button>\n          </div>\n          <div className=\"col-12 col-sm-4 text-center\">\n            <select \n              className=\"select-calendar\" \n              ref={monthSelect} \n              onChange={handleSelectChange}\n              value={props.date.getMonth()}\n            >\n              {\n                props.months.map((month, i) => {\n                return <option key={month} value={i}>{month}</option>\n                })\n              }\n            </select>\n            </div>\n            <div className=\"col-12 col-sm-4 text-center\">\n              <select\n                className=\"select-calendar\" \n                ref={yearSelect} \n                onChange={handleSelectChange}\n                value={props.date.getFullYear()}\n              >\n                {\n                  props.years.map(year => {\n                    return <option key={year} value={year}>{year}</option>\n                  })\n                }\n              </select>\n            </div>\n            <div className=\"col-12 offset-0 col-sm-2 offset-sm-0\">\n              <button className='btn btn-light' onClick={props.handleNextMonthButtonClick}>{'>'}</button>\n            </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 col-sm\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {\n                  props.weekDayNames.map(day => {\n                    return <th key={day}>{day}</th>\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              { \n                props.monthData.map((week, i) => {\n                  return <tr key={i}>\n                    { \n                      week.map((date, i) => date ? \n                      <td \n                        key={i} \n                        onClick={() => props.handleDayClick(date)} \n                        className = {classnames('td-date', {\n                          'today': areEqual(date, props.baseDate),\n                          'selected': areEqual(date, props.selectedDate) \n                        })}\n                      >\n                        {date.getDate()}\n                      </td>\n                        :\n                          <td key={i} />\n                      )}\n                  </tr>\n                }) \n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Calendar","import React, { useState } from 'react';\nimport './Calendar.scss';\nimport { getMonthData } from './GetMonthData';\nimport Calendar from './Calendar';\n\nconst CalendarContainer = () => {\n\n  const baseDate = new Date()\n\n  const months = [\n    'Январь', 'Февраля', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\n  ]\n  const years = [\n    2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020\n  ]\n  const weekDayNames = [\n    'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс'\n  ]\n\n  const [date, setDate] = useState(baseDate)\n  const [selectedDate, setSelectedDate] = useState(null)\n  const [monthData, setMonthData] = useState(getMonthData(date.getFullYear(), date.getMonth()))\n\n  const handlePrevMonthButtonClick = () => {\n    const prevDate = new Date(date.getFullYear(), date.getMonth() - 1)\n    setDate(prevDate)\n    setMonthData(getMonthData(prevDate.getFullYear(), prevDate.getMonth()))\n  }\n  \n  const handleNextMonthButtonClick = () => {\n    const nextDate = new Date(date.getFullYear(), date.getMonth() + 1)\n    setDate(nextDate)\n    setMonthData(getMonthData(nextDate.getFullYear(), nextDate.getMonth()))\n  }\n\n  const onSelectChange = (year, month) => {\n    const selectDate = new Date(year, month)\n    setDate(selectDate)\n    setMonthData(getMonthData(selectDate.getFullYear(), selectDate.getMonth()))\n  }\n\n  const handleDayClick = date => {\n    setSelectedDate(date)\n  }\n\n  return (\n    <Calendar\n      baseDate ={baseDate}\n      selectedDate = {selectedDate}\n      handlePrevMonthButtonClick= {handlePrevMonthButtonClick}\n      handleNextMonthButtonClick = {handleNextMonthButtonClick}\n      onSelectChange = {onSelectChange}\n      date = {date} \n      months = {months}\n      years = {years}\n      weekDayNames = {weekDayNames}\n      monthData = {monthData}\n      handleDayClick = {handleDayClick}\n    />\n  )\n}\n\nexport default CalendarContainer","import React, { useState } from 'react';\nimport { onDataCharting } from '../../redux/allToReducer';\nimport { connect } from 'react-redux';\nimport { LineChart, Line, YAxis, XAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport './Richarts.scss';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router-dom';\n\n\n\nconst Recharts = props => {\n\n  // const URL_LIST = 'https://made-car-to.firebaseio.com/.json'\n\n  useState(() => {\n    if (props.TOList !== null) {\n      props.onDataCharting(props.TOList)\n    } else {\n      props.history.push('/made-to')\n    }\n  },[])\n\n\n\n  return (\n    <div className=\"richarts\">\n      {\n        props.dataRecharts &&\n          <>\n            <h2 className=\"title-recharts\">График расходов</h2>\n            <div className=\"about-priceProduct\">priceProduct-Стоимсоть комплектующих</div>\n            <div className=\"about-priceWork\">priceWork-Стоимсоть работ</div>\n            <LineChart width={980} height={450} data={props.dataRecharts}\n              margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n              <CartesianGrid strokeDasharray=\"3 3\" />\n              <XAxis dataKey=\"title\" />\n              <YAxis type=\"number\" domain={[0, 'dataMax + 6700']}  />\n              <Tooltip />\n              <Legend />\n              <Line type=\"monotone\" dataKey=\"priceProduct\" stroke=\"#0095FF\" />\n              <Line type=\"monotone\" dataKey=\"priceWork\" stroke=\"#FF0000\" />\n            </LineChart>\n          </>\n        }\n      </div>\n    \n  )\n\n  \n}\nlet mapStateToProps = state => {\n  return{\n    TOList: state.allToReducer.TOList,\n    dataRecharts: state.allToReducer.dataRecharts\n  }\n}\n\nexport default compose(\n  withRouter,\n  connect(mapStateToProps, { onDataCharting })\n)(Recharts)","import React from 'react';\nimport './App.scss';\nimport Navbar from './components/Navbar/Navbar';\nimport ContainerRegulationTO from './components/RegulationTO/ContainerRegulationTO';\nimport AddTo from './components/AddTo/addTO';\nimport ContainerMadeTO from './components/MadeTO/ContainerMadeTO';\nimport Home from './components/Home/Home';\nimport Footer from './components/Footer/Footer';\nimport CalendarContainer from './components/Calendar/CalendarContainer';\nimport { Route } from 'react-router-dom';\nimport Recharts from './components/Recharts/Recharts';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <Navbar />\n      <div className=\"content\">\n        <Route exact path=\"/\" render={ () => <Home /> } /> \n        <Route path=\"/regulation-to\" render={ () => <ContainerRegulationTO /> } />\n        <Route path=\"/made-to\" render={ () => <ContainerMadeTO /> } />\n        <Route path=\"/add-to\" render={ () => <AddTo /> } /> \n        <Route path=\"/calendar\" render={() => <CalendarContainer />} />\n        <Route path=\"/recharts\" render={() => <Recharts />} />\n      </div>\n      <footer className=\"footer\">\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport allToReducer from './allToReducer';\nimport thunkMidleware from 'redux-thunk';\nimport {reducer as formReducer} from 'redux-form';\n\n\nlet reducers = combineReducers({\n  allToReducer,\n  form: formReducer\n})\n\nconst storage = createStore(reducers, applyMiddleware(thunkMidleware))\n\nexport default storage","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}